import { type PublicClient } from 'viem';
import type { AnnouncementLog } from '../getAnnouncements/types';
import { type GetAnnouncementsForUserParams, type GetAnnouncementsForUserReturnType, type ProcessAnnouncementParams, type ProcessAnnouncementReturnType } from './types';
/**
 * @description Fetches and processes a list of announcements to determine which are relevant for the user.
 * Filters announcements based on the `checkStealthAddress` function and optional exclude/include lists,
 *
 * @param {GetAnnouncementsForUserParams} params Parameters for fetching and filtering announcements, including:
 * - `announcements`: Array of announcement logs to be processed.
 * - `spendingPublicKey`: The user's spending public key.
 * - `viewingPrivateKey`: The user's viewing private key.
 * - `clientParams`:(Optional) Client parameters.
 * - `excludeList`: (Optional) Addresses to exclude from the results.
 * - `includeList`: (Optional) Addresses to specifically include in the results.
 * @returns {Promise<GetAnnouncementsForUserReturnType>} A promise that resolves to an array of announcements relevant to the user.
 */
declare function getAnnouncementsForUser({ announcements, spendingPublicKey, viewingPrivateKey, clientParams, excludeList, includeList }: GetAnnouncementsForUserParams): Promise<GetAnnouncementsForUserReturnType>;
/**
 * @description Processes a single announcement to determine if it is relevant for the user.
 * Checks if the announcement is intended for the user based on `checkStealthAddress` and filters based on exclude/include lists.
 *
 * @param {AnnouncementLog} announcement The announcement to process.
 * @param {PublicClient} publicClient The Viem public client for fetching transaction details.
 * @param {ProcessAnnouncementParams} params Additional parameters for processing, including:
 * - `spendingPublicKey`: The user's spending public key.
 * - `viewingPrivateKey`: The user's viewing private key.
 * - `excludeList`: Addresses to exclude from the results.
 * - `includeList`: Addresses to specifically include in the results.
 * @returns {Promise<ProcessAnnouncementReturnType>} A promise that resolves to the processed announcement if it is relevant, or null otherwise.
 */
export declare function processAnnouncement(announcement: AnnouncementLog, publicClient: PublicClient, { spendingPublicKey, viewingPrivateKey, excludeList, includeList }: ProcessAnnouncementParams): Promise<ProcessAnnouncementReturnType>;
/**
 * @description Fetches the transaction sender ('from' address) for a given transaction hash.
 * Utilized for filtering announcements based on exclude/include lists by identifying the sender of each announcement.
 *
 * @param {Object} params The parameters for fetching the transaction sender, including:
 * - `publicClient`: The Viem public client used for the transaction fetch.
 * - `hash`: The transaction hash to fetch the 'from' address for.
 * @returns {Promise<`0x${string}`>} A promise that resolves to the transaction sender address.
 * @throws {FromValueNotFoundError} If the transaction or sender address cannot be fetched, indicating a potential issue with the transaction lookup.
 */
export declare function getTransactionFrom({ publicClient, hash }: {
    publicClient: PublicClient;
    hash: `0x${string}`;
}): Promise<`0x${string}`>;
export default getAnnouncementsForUser;
